---
import Layout from '../../layouts/Layout.astro';
import NavBar from '../../components/NavBar';
import Footer from '../../components/Footer';
import { wordpressAPI } from '../../lib/wordpress';
import {
  extractExcerpt,
  getFeaturedImage,
  getAuthor,
  getCategories,
  getTags,
  formatDate
} from '../../lib/content-utils';
import { processFeaturedImage, processPostImages } from '../../lib/image-processor.js';

export async function getStaticPaths() {
  try {
    const categories = await wordpressAPI.getCategories();
    return categories.map(category => ({
      params: { slug: category.slug },
      props: { category }
    }));
  } catch (error) {
    console.error('Error fetching categories for static paths:', error);
    return [];
  }
}

const { category } = Astro.props;
const { slug } = Astro.params;

// Fetch all posts and filter by category
let posts = [];
let allCategories = [];
let wordpressAvailable = false;

try {
  console.log(`üîÑ Fetching posts for category: ${category.name}...`);
  [posts, allCategories] = await Promise.all([
    wordpressAPI.getAllPosts(),
    wordpressAPI.getCategories()
  ]);
  wordpressAvailable = true;
  
  // Filter posts by category
  posts = posts.filter(post =>
    getCategories(post).some(cat => cat.id === category.id)
  );
  
  console.log(`‚úÖ Found ${posts.length} posts in category "${category.name}"`);
} catch (error) {
  console.error('‚ùå Error fetching category posts:', error);
}

// Sort posts by date (newest first)
posts.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());

// Process images for all posts
if (posts.length > 0) {
  console.log('üñºÔ∏è Processing images for category posts...');
  for (let i = 0; i < posts.length; i++) {
    const post = posts[i];
    try {
      // Process featured image
      const featuredImage = getFeaturedImage(post);
      if (featuredImage) {
        const processedImage = await processFeaturedImage(featuredImage, post.slug);
        if (post._embedded && post._embedded['wp:featuredmedia']) {
          post._embedded['wp:featuredmedia'][0] = processedImage;
        }
      }

      // Process images in post content
      if (post.content && post.content.rendered) {
        post.content.rendered = await processPostImages(post.content.rendered, post.slug);
      }
    } catch (error) {
      console.warn(`‚ö†Ô∏è Failed to process images for post ${post.slug}:`, error.message);
    }
  }
}

// Get featured post (most recent in category) and remaining posts
const featuredPost = posts.length > 0 ? posts[0] : null;
const remainingPosts = posts.slice(1);

// SEO data
const title = `${category.name} | ${process.env.SITE_NAME || 'Website'}`;
const description = category.description || `Read our latest posts about ${category.name.toLowerCase()}.`;
---

<Layout title={title} description={description}>
  <NavBar client:load />

  <main>
    <!-- Import styles from blog index -->
    <style>
      /* Copy all styles from blog/index.astro */
      .hero-section {
        background: linear-gradient(135deg, #f0fdff 0%, #f8f4ff 100%);
        padding: 4rem 0;
      }

      .hero-content {
        max-width: 768px;
        margin: 0 auto;
        text-align: center;
        padding: 0 1rem;
      }

      .hero-title {
        font-size: 3rem;
        font-weight: 700;
        margin-bottom: 1.5rem;
        line-height: 1.2;
      }

      .hero-title .brand {
        background: linear-gradient(135deg, #22d3ee 0%, #a855f7 100%);
        -webkit-background-clip: text;
        background-clip: text;
        -webkit-text-fill-color: transparent;
        color: transparent;
      }

      .hero-title .text {
        color: #1f2937;
      }

      .hero-description {
        font-size: 1.25rem;
        color: #6b7280;
        line-height: 1.6;
        margin: 0;
      }

      .breadcrumb {
        background: white;
        padding: 1rem 0;
        border-bottom: 1px solid #f3f4f6;
      }

      .breadcrumb-container {
        max-width: 1024px;
        margin: 0 auto;
        padding: 0 1rem;
      }

      .breadcrumb-nav {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.875rem;
        color: #6b7280;
      }

      .breadcrumb-link {
        color: #4DBBFA;
        text-decoration: none;
        transition: color 0.2s ease;
      }

      .breadcrumb-link:hover {
        color: #58D68D;
      }

      .breadcrumb-current {
        color: #1f2937;
        font-weight: 500;
      }

      /* Back to all posts button */
      .back-to-blog {
        background: white;
        padding: 1rem 0;
      }

      .back-container {
        max-width: 1024px;
        margin: 0 auto;
        padding: 0 1rem;
      }

      .back-button {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        color: #4DBBFA;
        text-decoration: none;
        font-weight: 500;
        transition: all 0.2s ease;
        padding: 0.5rem 1rem;
        border-radius: 9999px;
        border: 1px solid #e5e7eb;
      }

      .back-button:hover {
        background: #f0fdff;
        border-color: #4DBBFA;
        transform: translateX(-2px);
      }

      /* Rest of the styles from blog index... */
      .main-content {
        max-width: 1200px;
        margin: 0 auto;
        padding: 3rem 1rem;
      }

      .posts-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
        gap: 2rem;
      }

      @media (min-width: 768px) {
        .posts-grid {
          grid-template-columns: repeat(2, 1fr);
        }
      }

      @media (min-width: 1024px) {
        .posts-grid {
          grid-template-columns: repeat(3, 1fr);
        }
      }

      .post-card {
        background: white;
        border-radius: 0.75rem;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        border: 1px solid #f3f4f6;
        overflow: hidden;
        transition: all 0.2s ease;
      }

      .post-card:hover {
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
        transform: translateY(-2px);
      }

      .post-image-container {
        position: relative;
        width: 100%;
        height: 12rem;
        overflow: hidden;
      }

      .post-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
      }

      .post-content {
        padding: 1.5rem;
        display: flex;
        flex-direction: column;
        gap: 1rem;
      }

      .post-title {
        font-size: 1.25rem;
        font-weight: 600;
        color: #1f2937;
        line-height: 1.4;
        margin: 0;
      }

      .post-title a {
        color: inherit;
        text-decoration: none;
      }

      .post-title a:hover {
        color: #4DBBFA;
      }

      .post-excerpt {
        color: #6b7280;
        font-size: 0.875rem;
        line-height: 1.5;
        margin: 0;
      }

      .post-meta {
        display: flex;
        align-items: center;
        justify-content: space-between;
        font-size: 0.75rem;
        color: #9ca3af;
      }

      .post-button {
        background: white;
        color: #374151;
        border: 1px solid #d1d5db;
        padding: 0.75rem 1.5rem;
        border-radius: 9999px;
        font-size: 0.875rem;
        font-weight: 500;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
        transition: all 0.2s ease;
        width: 100%;
      }

      .post-button:hover {
        background: #ecfdf5;
        color: #059669;
        border-color: #d1fae5;
      }

      .no-posts {
        text-align: center;
        padding: 3rem;
        background: white;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
      }

      @media (max-width: 768px) {
        .hero-title {
          font-size: 2.5rem;
        }
      }
    </style>

    <!-- Hero Section -->
    <section class="hero-section">
      <div class="hero-content">
        <h1 class="hero-title">
          <span class="brand">{category.name}</span>
          <span class="text"> Posts</span>
        </h1>
        <p class="hero-description">
          {category.description || `Explore our latest insights and articles about ${category.name.toLowerCase()}.`}
        </p>
      </div>
    </section>

    <!-- Breadcrumb -->
    <section class="breadcrumb">
      <div class="breadcrumb-container">
        <nav class="breadcrumb-nav">
          <a href="/" class="breadcrumb-link">Home</a>
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <polyline points="9,18 15,12 9,6"></polyline>
          </svg>
          <a href="/blog" class="breadcrumb-link">News</a>
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <polyline points="9,18 15,12 9,6"></polyline>
          </svg>
          <span class="breadcrumb-current">{category.name}</span>
        </nav>
      </div>
    </section>

    <!-- Back to Blog Button -->
    <section class="back-to-blog">
      <div class="back-container">
        <a href="/blog" class="back-button">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <polyline points="15,18 9,12 15,6"></polyline>
          </svg>
          Back to all news
        </a>
      </div>
    </section>

    <!-- Posts Grid -->
    <div class="main-content">
      {posts.length > 0 ? (
        <div class="posts-grid">
          {posts.map(post => {
            const featuredImage = getFeaturedImage(post);
            const author = getAuthor(post);
            const excerpt = post.excerpt.rendered || extractExcerpt(post.content.rendered);
            const formattedDate = formatDate(post.date);

            return (
              <article class="post-card">
                <div class="post-image-container">
                  {featuredImage ? (
                    <img
                      src={featuredImage.source_url}
                      alt={featuredImage.alt_text || post.title.rendered}
                      class="post-image"
                      loading="lazy"
                    />
                  ) : (
                    <div class="post-image" style="background: linear-gradient(135deg, #f3f4f6 0%, #e5e7eb 100%); display: flex; align-items: center; justify-content: center; color: #9ca3af; font-weight: 500;">
                      PlayPhysio Blog
                    </div>
                  )}
                </div>

                <div class="post-content">
                  <h3 class="post-title">
                    <a href={`/blog/${post.slug}`}>{post.title.rendered}</a>
                  </h3>

                  <div class="post-excerpt">{excerpt.replace(/<[^>]*>/g, '').trim()}</div>

                  <div class="post-meta">
                    <span>{author?.name || 'PlayPhysio Team'}</span>
                    <span>{formattedDate}</span>
                  </div>

                  <a href={`/blog/${post.slug}`} class="post-button">
                    Read More
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                      <line x1="5" y1="12" x2="19" y2="12"></line>
                      <polyline points="12,5 19,12 12,19"></polyline>
                    </svg>
                  </a>
                </div>
              </article>
            );
          })}
        </div>
      ) : (
        <div class="no-posts">
          <h2>No posts found in {category.name}</h2>
          <p>Check back later for new content in this category!</p>
          <a href="/blog" class="back-button" style="margin-top: 1rem;">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <polyline points="15,18 9,12 15,6"></polyline>
            </svg>
            Back to all news
          </a>
        </div>
      )}
    </div>
  </main>

  <Footer client:load />
</Layout>
